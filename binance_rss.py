#!/usr/bin/env python3
# binance_rss.py  —  resilient version (v2 / v1 / GET fallback)

import datetime, json, requests
from feedgen.feed import FeedGenerator
from requests.adapters import HTTPAdapter, Retry

HEADERS = {
    "User-Agent": "Mozilla/5.0",
    "X-Lang": "zh-CN",
    "X-Platform": "web",
    "X-Channel-Code": "official-site",
    "Referer": "https://www.binance.com/zh-CN/support/announcement",
}

PARAMS_BODY = {"type": 1, "catalogId": 48, "pageNo": 1, "pageSize": 20}

SESSION = requests.Session()
SESSION.mount(
    "https://",
    HTTPAdapter(max_retries=Retry(total=4, backoff_factor=1, status_forcelist=[502, 503, 504])),
)

def get_articles() -> list[dict]:
    """Try several endpoint styles until one returns 200 + JSON."""
    endpoints = [
        ("POST", "https://www.binance.com/bapi/composite/v2/public/cms/article/list/query"),
        ("POST", "https://www.binance.com/bapi/composite/v1/public/cms/article/list/query"),
        ("GET",  "https://www.binance.com/bapi/composite/v1/public/cms/article/list/query"),
    ]

    for method, url in endpoints:
        try:
            if method == "POST":
                r = SESSION.post(url, json=PARAMS_BODY, headers=HEADERS, timeout=15)
            else:  # GET
                r = SESSION.get(url, params=PARAMS_BODY, headers=HEADERS, timeout=15)
            r.raise_for_status()

            data = r.json()
            # some cloud-flare blocks return HTML; be sure it's JSON
            if "data" in data and "articles" in data["data"]:
                return data["data"]["articles"]
        except Exception as e:
            # uncomment next line to see which ones failed in your Action logs
            # print(f"{method} {url} failed: {e}")
            continue

    raise RuntimeError("All Binance CMS endpoint attempts failed (v2, v1, GET).")

def build_feed():
    fg = FeedGenerator()
    fg.title("Binance – 新数字货币及交易对上新")
    fg.link(href="https://www.binance.com/zh-CN/support/announcement/list/48")
    fg.description("Automated feed generated by GitHub Actions")
    fg.language("zh-cn")

    for art in get_articles():
        fe = fg.add_entry()
        fe.title(art["title"])
        fe.link(href=f'https://www.binance.com/zh-CN/support/announcement/{art["code"]}')
        fe.guid(art["code"])
        fe.pubDate(datetime.datetime.fromtimestamp(art["releaseDate"] / 1000))

    fg.rss_file("launchpool.xml", pretty=True)

if __name__ == "__main__":
    build_feed()
